{"version":3,"sources":["assets/images/headshot.jpg","components/About/index.js","components/Nav/index.js","assets/images/now-playing.png","assets/images/cinequiz.png","assets/images/budget.png","assets/images/nolo.png","assets/images/note-taker.png","assets/images/Screenshot.png","components/Portfolio/index.js","components/Contact/index.js","utils/helpers.js","components/Resume/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["About","id","className","src","headshot","alt","width","Nav","props","name","map","link","href","onClick","setPage","Portfolio","projects","img","nowPlaying","description","tech","repository","deployed","Cinequiz","Budget","Nolo","Notes","quiz","project","Contact","useState","errorMessage","setErrorMessage","email","message","formState","setFormState","handleChange","e","target","isValid","test","String","toLowerCase","validateEmail","value","console","log","length","action","method","enctype","htmlfor","type","defaultValue","onBlur","class","htmlFor","rows","Resume","Footer","rel","App","page","renderPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c82a513d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/headshot.883c3565.jpg\";","  \nimport React from 'react';\nimport headshot from '../../assets/images/headshot.jpg';\n\nfunction About() {\n    \n    return (\n        <section id=\"about\">\n            <img className=\"drew\" src={headshot} alt=\"headshot\" width=\"25%\" />\n            <div className=\"about-text\">\n                <p>\n                My name is Drew Vena, I am a full stack web developer who learned the tricks of the trade through a bootcamp by The University of Texas. I work well with others and thrive in problem solving / chaotic situations.  \n                </p>\n            </div>\n        </section>\n    )\n}\nexport default About;","import React from 'react';\n\nfunction Nav(props) {\n    const links = [\n        {\n            name: 'About Me',\n            id: '#about-me',\n        },\n        {\n            name: 'Portfolio',\n            id: '#portfolio',\n        },\n        {\n            name: 'Contact',\n            id: '#contact',\n        },\n        {\n            name: 'Resume',\n            id: '#resume',\n        }\n    ]\n    return (\n        <nav className=\"header\">\n            <ul className=\"links\">\n                {links.map((link) => (\n                    <li>\n                        <a className=\"linkers\" href={link.id} id={link.id} onClick={() => (\n                            props.setPage(link.name)\n                            )\n                        }>\n                            {link.name}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    )\n}\nexport default Nav;","export default __webpack_public_path__ + \"static/media/now-playing.a1f03526.png\";","export default __webpack_public_path__ + \"static/media/cinequiz.fdb577f2.png\";","export default __webpack_public_path__ + \"static/media/budget.aedfd45f.png\";","export default __webpack_public_path__ + \"static/media/nolo.ba0486ec.png\";","export default __webpack_public_path__ + \"static/media/note-taker.ad6ac1c7.png\";","export default __webpack_public_path__ + \"static/media/Screenshot.ce392cda.png\";","import React from 'react';\nimport nowPlaying from '../../assets/images/now-playing.png';\nimport Cinequiz from '../../assets/images/cinequiz.png';\nimport Budget from '../../assets/images/budget.png';\nimport Nolo from '../../assets/images/nolo.png';\nimport Notes from '../../assets/images/note-taker.png';\nimport quiz from '../../assets/images/Screenshot.png';\nfunction Portfolio() {\n    const projects = [\n        {\n            name: 'Now Playing',\n            img: nowPlaying,\n            description: 'Now Playing is a social media application where users post music they are listening to and other users can interact, comment and like each others posts!',\n            tech: 'Handlebars, Express, Sequelize',\n            repository: 'https://github.com/drewvena/now-playing',\n            deployed: 'https://nowplayingapp.herokuapp.com/'\n            \n        },\n        {\n            name: 'Cinequiz',\n            img: Cinequiz,\n            description: 'The Movie Game that uses a third party api to build a movie trivia game for the user to enjoy! All answers are responded to using a gif and highscores are logged for everyone, lets see who is best!',\n            tech: 'HTML, CSS, JS, OMDb API, GIPHY API',\n            repository: 'https://github.com/drewvena/git-it-right',\n            deployed: 'https://drewvena.github.io/git-it-right/'\n        },\n        {\n            name: 'Budget Tracker',\n            img: Budget,\n            description: 'This project uses mongodb, mongoose, express, service workers and a manifest to create an application to track your budget! The application has been deployed to heroku in connection with Mongo Atlas',\n            tech: 'Mongodb, mongoose, express, service workers, heroku and Mongo Atlas',\n            repository: 'https://github.com/drewvena/symmetrical-giggle',\n            deployed: 'https://budget-tracker-man.herokuapp.com/'\n\n        },\n        {\n            name: 'Nolo',\n            img: Nolo,\n            description: 'This project was built using Bootstrap, HTML and CSS, I built the page for my band and used github pages as the server to connect the domain for free hosting!',\n            repository: 'https://github.com/drewvena/nolo',\n            deployed: 'http://nolotheband.com/'\n        },\n        {\n            name: 'Note Taker',\n            img: Notes,\n            description: 'This project uses express, path, nanoid and heroku to create a note taking application that has save and delete funcionality!',\n            repository: 'https://github.com/drewvena/express-note-taker',\n            deployed: 'https://notey-totey.herokuapp.com/'\n        },\n        {\n            name: 'Coding Quiz',\n            img: quiz,\n            description: 'This project uses local storage along with JS, HTML and CSS to create a five question coding quiz that has a penalty for wrong answers(subtract in time remaining)',\n            repository: 'https://github.com/drewvena/coding-quiz',\n            deployed: 'https://drewvena.github.io/coding-quiz/'\n        }\n    ];\n    return (\n        <section id=\"projects\">\n            {projects.map((project) => (\n                <div className=\"Project\">\n                    <img className=\"port-img\"src={project.img} alt={`${project.name}`} />\n                    <h3 className=\"proj-d\">{project.name}</h3>\n                    <p className=\"proj-d\">{project.description}</p>\n                    <p className=\"proj-d\">{project.tech}</p>\n                    <a className=\"proj-a\" href={project.repository}>Repository</a>\n                    <a className=\"proj-a\" href={project.deployed}>Deployed App</a>\n                </div>\n            ))}\n        </section>\n    )\n}\nexport default Portfolio;","import React, { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\n\nfunction Contact (){\n    const [errorMessage, setErrorMessage] = useState('');\n    const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n    const { name, email, message } = formState;\n    function handleChange(e) {\n        if (e.target.name === 'email') {\n            const isValid = validateEmail(e.target.value);\n            console.log(isValid);\n            // isValid conditional statement\n            if (!isValid) {\n                setErrorMessage('Your e-mail is invalid.');\n            } else {\n                setErrorMessage('');\n            }\n        } else {\n            if (!e.target.value.length) {\n              setErrorMessage(`${e.target.name} is required.`);\n            } else {\n              setErrorMessage('');\n            }\n          } \n        \n          if (!errorMessage) {\n            setFormState({ ...formState, [e.target.name]: e.target.value });\n          }\n        console.log('errorMessage', errorMessage);\n    }\n    return (\n        <div className=\"container\">\n            <form className=\"contact-forms\"action =\"mailto:drewvena1@gmail.com\" target =\"_blank\"method=\"POST\" enctype=\"multipart/form-data\">\n                <div className=\"contact-box\">\n                <label htmlfor=\"name\">Your Name</label>\n                <input type=\"text\" id=\"name\" name=\"name\"defaultValue={name} onBlur={handleChange}></input>\n                </div>\n                <div className=\"contact-box\">\n                <label htmlfor=\"email\">Your Email</label>\n                <input type=\"text\" id=\"email\" name=\"email\"defaultValue={email} onBlur={handleChange}></input>\n                </div>\n                <div class=\"contact-box\">\n              <label class=\"textarea-label\" htmlFor=\"Message\">Message</label>\n              <br/>\n              <textarea name=\"Message\" defaultValue={message} onBlur={handleChange} rows=\"4\" />\n            </div>\n                {errorMessage && (\n                <div>\n                    <p className=\"error-text\">{errorMessage}</p>\n                </div>\n            )}\n             <button className=\"button\" type=\"submit\">Email Drew</button>\n            </form>\n\n        </div>\n    )\n}\nexport default Contact","export function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  \n  export function validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }","import React from 'react';\n\nfunction Resume(){\n    return (\n        <div className=\"resume\">\n            <h1 className='res'>Resume:</h1>\n            <div className='ex'>\n                <h3>Experience</h3>\n            </div>\n            <div className='work'>\n                <p>Recovery Unplugged</p>\n                <p>Executive Marketing Administrator</p>\n                <p>Sept 2019 to December 2020</p>\n            </div>\n            <h3 className=\"skills\">SKILLS:</h3>\n            <div className=\"tech-skill\">\n     \n                <p>React</p>\n                <p>MongoDb</p>\n                <p>Node</p>\n                <p>Express.js</p>\n                <p>MySQL</p>\n                <p>JS</p>\n                <p>HTML/CSS</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Resume;","import React from 'react';\nimport {FaGithub, FaLinkedin} from 'react-icons/fa';\nfunction Footer(){\n    return (\n        <section id=\"footer\" className='footer'>\n            <a href=\"https://github.com/drewvena\" target='_blank' rel=\"noreferrer\"><FaGithub /></a>\n            <a href=\"https://www.linkedin.com/in/drew-vena-065b33191/\" target='_blank' rel=\"noreferrer\"><FaLinkedin /></a>\n        </section>\n    )\n}\nexport default Footer","import React, { useState } from 'react';\nimport About from './components/About';\nimport Nav from './components/Nav'\nimport Portfolio from './components/Portfolio'\nimport Contact from './components/Contact'\nimport Resume from './components/Resume';\nimport Footer from './components/Footer'\nimport './index.css';\n\nfunction App() {\n  const [page, setPage] = useState('About');\n  function renderPage() {\n    switch(page) {\n      case 'Portfolio':\n        return <Portfolio />;\n      case 'Contact': \n        return <Contact />;\n      case 'Resume':\n        return <Resume />;\n      case 'About Me':\n        return <About />;\n        default:      return <About></About>;\n    }\n  }\n  return (\n    <div className=\"mainpage\">\n      <Nav \n        page={page}\n        setPage={setPage}\n        renderPage={renderPage}\n      />\n      {renderPage()}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\n"],"sourceRoot":""}